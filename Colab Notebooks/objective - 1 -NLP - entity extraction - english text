{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"objective - 1 -NLP - entity extraction - english text","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyOBQgGYZOWoRkaGi+IT/axs"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"80tKY65Deue6","executionInfo":{"status":"ok","timestamp":1656157732619,"user_tz":-330,"elapsed":4487,"user":{"displayName":"prakwan manem","userId":"11869477581404094579"}},"outputId":"ac8cf206-7e3d-4d59-922c-6459fa9fc11e"},"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/stopwords.zip.\n","[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Unzipping tokenizers/punkt.zip.\n","[nltk_data] Downloading package averaged_perceptron_tagger to\n","[nltk_data]     /root/nltk_data...\n","[nltk_data]   Unzipping taggers/averaged_perceptron_tagger.zip.\n","[nltk_data] Downloading package wordnet to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/wordnet.zip.\n","[nltk_data] Downloading package omw-1.4 to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/omw-1.4.zip.\n"]},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":1}],"source":["import io\n","from google.colab import files\n","import pandas as pd\n","import numpy as np\n","import random\n","\n","import re,string\n","import nltk\n","from nltk.corpus import stopwords\n","from nltk.tokenize import word_tokenize\n","from nltk.tag import pos_tag\n","from nltk.corpus import wordnet\n","nltk.download('stopwords')\n","nltk.download('punkt')\n","nltk.download('averaged_perceptron_tagger')\n","nltk.download('wordnet')\n","nltk.download('omw-1.4')"]},{"cell_type":"code","source":["uploaded = files.upload()"],"metadata":{"colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":73},"id":"VmBxKaomfF3J","executionInfo":{"status":"ok","timestamp":1656157970318,"user_tz":-330,"elapsed":231687,"user":{"displayName":"prakwan manem","userId":"11869477581404094579"}},"outputId":"f3a8d3e6-9204-4f40-b3ad-deac13575e71"},"execution_count":2,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-6c202051-5467-45e4-9a3b-497b189fa071\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-6c202051-5467-45e4-9a3b-497b189fa071\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving tweets.txt to tweets.txt\n"]}]},{"cell_type":"code","source":["  tweets = pd.read_csv(io.BytesIO(uploaded['tweets.txt']),sep = \",\",engine = 'python',encoding = 'UTF-8')"],"metadata":{"id":"QvfhvUEqfUIv","executionInfo":{"status":"ok","timestamp":1656157978053,"user_tz":-330,"elapsed":955,"user":{"displayName":"prakwan manem","userId":"11869477581404094579"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["tweets['tweet_author'] = tweets['tweet_author'].replace(r'\\n',' ', regex=True)\n","def clean (line):\n","  line = line.strip()\n","  line = re.compile('[%s]' % re.escape(string.punctuation)).sub(' ',line)\n","  line = re.sub('\\s+',' ',line)\n","  line = re.sub('\\[[0-9]\\]',' ',line)\n","  line = re.sub('\\d+',' ',line)\n","  line = re.sub('[^\\w\\s]',' ',str(line).lower().strip())\n","  line = re.sub('\\s+',' ',line)\n","  return line"],"metadata":{"id":"_1pIj8zVkMTa","executionInfo":{"status":"ok","timestamp":1656157981382,"user_tz":-330,"elapsed":2,"user":{"displayName":"prakwan manem","userId":"11869477581404094579"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["tweets['tweet_author'] = tweets['tweet_author'].apply(lambda x : clean(x))\n","tweets = tweets[tweets['Language'].notnull()]\n","tweets = tweets[tweets['Final_tweet'].notnull()]\n","tweets['hashtags'].fillna('No hashtag',inplace = True)\n","tweets['Final_tweet'] = tweets['Final_tweet'].apply(lambda x : x.lower())\n","tweets = tweets[tweets['Language'] == 'English']"],"metadata":{"id":"cq4Oo_x2kUfE","executionInfo":{"status":"ok","timestamp":1656157983747,"user_tz":-330,"elapsed":936,"user":{"displayName":"prakwan manem","userId":"11869477581404094579"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["tweets.drop('Language',axis = 1, inplace = True)\n","tweets.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NJvO5MTFUq5k","executionInfo":{"status":"ok","timestamp":1656157986674,"user_tz":-330,"elapsed":620,"user":{"displayName":"prakwan manem","userId":"11869477581404094579"}},"outputId":"a705ae98-e8ca-40ad-cd16-a72e11459aeb"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 40680 entries, 0 to 43348\n","Data columns (total 5 columns):\n"," #   Column        Non-Null Count  Dtype \n","---  ------        --------------  ----- \n"," 0   tweet_id      40680 non-null  object\n"," 1   tweet_author  40680 non-null  object\n"," 2   tweet_text    40680 non-null  object\n"," 3   hashtags      40680 non-null  object\n"," 4   Final_tweet   40680 non-null  object\n","dtypes: object(5)\n","memory usage: 1.9+ MB\n"]}]},{"cell_type":"code","source":["def clean1 (line):\n","  line = line.strip()\n","  line = re.compile('[%s]' % re.escape(string.punctuation)).sub(' ',line)\n","  line = re.sub('\\s+',' ',line)\n","  line = re.sub('\\[[0-9]\\]',' ',line)\n","  line = re.sub('\\d+',' ',line)\n","  line = re.sub('[^\\w\\s]',' ',line)\n","  line = re.sub('\\s+',' ',line)\n","  line = lower_except_abbr(line)\n","  return line\n","\n","def lower_except_abbr(line):\n","  a = []\n","  for word in line.split():\n","    flag = True\n","    for i in range(len(word)):\n","      if (word[i].islower() or len(word) == 1):\n","        flag = False\n","        break\n","    if flag:\n","      a.append(word)\n","    else:\n","      a.append(word.lower())\n","  return ' '.join(a)\n","\n","def remove_hashtag_attherate(line):\n","  a = []\n","  for word in line.split():\n","    if ((word[0] == '#') | (word[0] == '@')):\n","      word = word[1:]\n","      a.append(word)\n","    else:\n","      a.append(word)\n","  return ' '.join(a)\n"],"metadata":{"id":"dZpqbbJcDUhF","executionInfo":{"status":"ok","timestamp":1656160233375,"user_tz":-330,"elapsed":641,"user":{"displayName":"prakwan manem","userId":"11869477581404094579"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["tweets['tweet_text'] = tweets['tweet_text'].apply(lambda x : remove_hashtag_attherate(x))\n","tweets['Final_tweet'] = tweets['tweet_text'].apply(lambda x : clean1(x))"],"metadata":{"id":"pTBD3svKPMhY","executionInfo":{"status":"ok","timestamp":1656160489052,"user_tz":-330,"elapsed":2676,"user":{"displayName":"prakwan manem","userId":"11869477581404094579"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["#creating own tags based on nltk tagger\n","def ownpos_tag(tag):\n","  if tag.startswith('J'):\n","    return 'ADJ'\n","  if tag.startswith('V'):\n","    return 'VERB'\n","  if tag.startswith('N'):\n","    return 'NOUN'\n","  if tag.startswith('R'):\n","    return 'ADV'\n","  else:\n","    return tag"],"metadata":{"id":"4NVSBnHlFdL2","executionInfo":{"status":"ok","timestamp":1656157998691,"user_tz":-330,"elapsed":370,"user":{"displayName":"prakwan manem","userId":"11869477581404094579"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["def preprocess(sent):\n","    sent = nltk.pos_tag(nltk.word_tokenize(sent))\n","    sent = list(map(lambda x : (x[0],ownpos_tag(x[1])),sent))\n","    return sent"],"metadata":{"id":"HKd5hXjwFjbr","executionInfo":{"status":"ok","timestamp":1656158004837,"user_tz":-330,"elapsed":374,"user":{"displayName":"prakwan manem","userId":"11869477581404094579"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["pattern = 'NP: {<DT>?<JJ>*<NN>}'\n","cp = nltk.RegexpParser(pattern)\n","from nltk.chunk import conlltags2tree, tree2conlltags\n","from pprint import pprint\n","nltk.download('maxent_ne_chunker')\n","nltk.download('words')"],"metadata":{"id":"JGbnNePPUio3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1656158009095,"user_tz":-330,"elapsed":977,"user":{"displayName":"prakwan manem","userId":"11869477581404094579"}},"outputId":"98244c3a-c436-43e3-af91-e078b83d6e51"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package maxent_ne_chunker to\n","[nltk_data]     /root/nltk_data...\n","[nltk_data]   Unzipping chunkers/maxent_ne_chunker.zip.\n","[nltk_data] Downloading package words to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/words.zip.\n"]},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["from nltk.tree import Tree  \n","\n","def entextract_nltk(text):\n","  chunked = nltk.ne_chunk(pos_tag(word_tokenize(text)))\n","  continuous_chunk = []\n","  named_entity = []\n","  current_chunk = []\n","  for i in chunked:\n","    if type(i) == Tree:\n","      #print(i,end = '\\n')\n","      #print(i.leaves(), end = '\\n')\n","      current_chunk.append(\" \".join([token for token, pos in i.leaves()]))\n","      #print(current_chunk, end ='\\n')\n","    if current_chunk:\n","      named_entity = \" \".join(current_chunk)\n","      #print(named_entity, end ='\\n')\n","      if named_entity not in continuous_chunk:\n","        continuous_chunk.append(named_entity)\n","        current_chunk = []\n","  return continuous_chunk   "],"metadata":{"id":"4ihFu08wF1c-","executionInfo":{"status":"ok","timestamp":1656163193736,"user_tz":-330,"elapsed":6,"user":{"displayName":"prakwan manem","userId":"11869477581404094579"}}},"execution_count":42,"outputs":[]},{"cell_type":"code","source":["text = 'WASHINGTON -- In the wake of a string of abuses by New York police officers in the 1990s, Loretta E. Lynch, the top federal prosecutor in Brooklyn, spoke forcefully about the pain of a broken trust that African-Americans felt and said the responsibility for repairing generations of miscommunication and mistrust fell to law enforcement.'\n","entextract_nltk(text)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p-Tb5nwTTWM-","executionInfo":{"status":"ok","timestamp":1656163200061,"user_tz":-330,"elapsed":474,"user":{"displayName":"prakwan manem","userId":"11869477581404094579"}},"outputId":"64777aa8-b4dd-4b3f-807e-00449de676c6"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['WASHINGTON', 'New York', 'Loretta E. Lynch', 'Brooklyn']"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["import spacy\n","from spacy import displacy\n","from collections import Counter\n","import en_core_web_sm\n","nlp = en_core_web_sm.load() "],"metadata":{"id":"n2TsKpqEV6TC","executionInfo":{"status":"ok","timestamp":1656158031332,"user_tz":-330,"elapsed":7853,"user":{"displayName":"prakwan manem","userId":"11869477581404094579"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["def entextract_spacy(text):\n","  doc = nlp(text)\n","  l = list(doc.ents)\n","  return l"],"metadata":{"id":"PyHxAKqveMVa","executionInfo":{"status":"ok","timestamp":1656158033473,"user_tz":-330,"elapsed":391,"user":{"displayName":"prakwan manem","userId":"11869477581404094579"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["random_index = list(np.random.randint(low = 0, high = len(tweets), size = 5))"],"metadata":{"id":"V7kSx1Edf4MT","executionInfo":{"status":"ok","timestamp":1656163603310,"user_tz":-330,"elapsed":478,"user":{"displayName":"prakwan manem","userId":"11869477581404094579"}}},"execution_count":49,"outputs":[]},{"cell_type":"code","source":["for i in random_index:\n","  print(tweets['tweet_text'].iloc[i], end = '\\n')\n","  print(tweets['hashtags'].iloc[i], end = '\\n')\n","  print(tweets['entity'].iloc[i], end = '\\n')\n","  print('\\n')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YWPvdz_9aMvy","executionInfo":{"status":"ok","timestamp":1656163608025,"user_tz":-330,"elapsed":573,"user":{"displayName":"prakwan manem","userId":"11869477581404094579"}},"outputId":"2682d3a7-b64d-4289-b56b-6fb04710d120"},"execution_count":50,"outputs":[{"output_type":"stream","name":"stdout","text":["The CLLSociety is invested in your long life. Invest in the long life of the CLL Society! CLL Society has earned a 2020 Platinum Seal of Transparency by sharing the metrics that matter most!\n","cllsociety cll\n","['CLLSociety', 'Invest', 'CLL Society', 'CLL Society Transparency']\n","\n","\n","Excited to open REMoDL-A (CI Andy Davies):trial design allowing HD-MTX prophylaxis if indicated. R-CHOP +/-Acalabrutinib (also likely to provide additional CNS prophylaxis) Data from Phase I/II ACCEPT TRIAL promising (ASH 2020) Also correlative translational work lymsm DLBCL\n","lymsm dlbcl\n","['CI Andy', 'CNS', 'Phase', 'ASH', 'DLBCL']\n","\n","\n","Mulligan CLL Oral F(C)R therapy tolerable, safe and efficacious in patients aged over 65yrs MOGA15 gerionc yrs.\n","cll moga gerionc\n","['Mulligan', 'CLL Oral', 'MOGA15']\n","\n","\n","Predicting Prognosis in Chronic Lymphocytic Leukemia\n","no hashtag\n","['Chronic']\n","\n","\n","Beausejour MP Dominic LeBlanc is reporting a clean bill of health after successful treatments for chronic lymphocytic leukemia: nbnews cdnpoli\n","nbnews cdnpoli\n","[]\n","\n","\n"]}]},{"cell_type":"code","source":["tweets['entity'] = tweets['tweet_text'].apply(lambda x: entextract_nltk(x))"],"metadata":{"id":"jIpnUXw349Ov","executionInfo":{"status":"ok","timestamp":1656163512003,"user_tz":-330,"elapsed":289004,"user":{"displayName":"prakwan manem","userId":"11869477581404094579"}}},"execution_count":45,"outputs":[]}]}